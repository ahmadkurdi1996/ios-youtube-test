name: Xcode - Build Analyze Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyze and test using xcodebuild command
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: print the path
      #   run: xcode-select --print-path


      # - name: Codesign executable
      #   env: 
      #     BUILD_CERTIFICATE_BASE64: "YWhtYWQua3VyZGkudWJpdGMucDEyCg=="
      #     P12_PASSWORD: "ubitc123"
      #     BUILD_PROVISION_PROFILE_BASE64: "OWY5ZjMwYTctNzgzMS00MDc1LTkzODktYjE2YzU2NTRkYTUyLm1vYmlsZXByb3Zpc2lvbgo="
      #     KEYCHAIN_PASSWORD: "123456789"
      #   run: |
      #     echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
      #     security create-keychain -P "123456789" build.keychain
      #     security default-keychain -s build.keychain
      #     security unlock-keychain -P "123456789" build.keychain
      #     security import certificate.p12 -P '123456789' build.keychain -P '123456789' -T /usr/bin/codesign -T /usr/bin/security

      #     # security import certificate.p12 -k build.keychain -P $P12_PASSWORD -T /usr/bin/codesign
      #     security set-key-Partition-list -S apple-tool:,apple:,codesign: -s -k "123456789" build.keychain
      - name: Dump file hierarchy
        run : ls -R
      - uses: actions/checkout@v3

      - run: ls -lta

      - name: Xcode version 
        run: /usr/bin/xcodebuild -version

      # - name: print path
      #   run: xcrun xcode-select --print-path

      # - name: select xcode 
      #   run: sudo xcode-select --switch /Applications/Xcode_13.2.1.app/Contents/Developer

      - name: Xcode version 
        run: /usr/bin/xcodebuild -version

      - name: To list all schemes in your workspace
        run: xcodebuild -list -workspace AnyApp.xcworkspace
        continue-on-error: true

      - name: To list all targets, build configurations, and schemes used in your project,
        run: xcodebuild -list -project AnyApp.xcodeproj/
        continue-on-error: true

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "123456789" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "123456789" $KEYCHAIN_PATH

          # import certificate to keychain
          security import ./ahmad.kurdi.ubitc.p12 -P "ubitc123" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ./9f9f30a7-7831-4075-9389-b16c5654da52.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles


      - name: building the app
        run: xcodebuild -project "AnyApp.xcodeproj" -scheme "AnyApp" -destination "generic/platform=ios" -archivePath ${{GITHUB.WORKSPACE}}/YourApp.xcarchive archive -configuration "Release" build CODE_SIGNING_ALLOWED=NO 
        continue-on-error: true 


      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: ${{GITHUB.WORKSPACE}}/YourApp.xcarchive # or path/to/artifact

              # - name: build autosigning
        #   # run: xcodebuild -Project ./livaat.xcodeproj -scheme livaat -configuration Release build
        #   # run: xcodebuild -scheme "livaat" clean archive -archivePath "actions" -configuration "Release" -allowProvisioningUpdates
        #   run: xcodebuild build-for-testing -workspace AnyApp.xcworkspace -scheme AnyApp -destination generic/platform=iOS # -allowProvisioningUpdates CODE_SIGNING_ALLOWED=NO
        # # - name : build archive
        #   run: |
        #     xcodebuild -sdk iphoneos -project livaat.xcodeproj \
        #       -configuration Debug -scheme livaat \
        #       -derivedDataPath DerivedData \
        #       -archivePath DerivedData/Archive/livaat archive 




# name: Building and Deploying ios

# on:
#   push:
#     branches: [ "main" ]
#   workflow_dispatch:

# jobs:
#   build:

#     runs-on: macos-latest
#     steps:
#     - name: Dump file hierarchy
#       run : ls -R
#     - uses: actions/checkout@v3

#     - run: ls -lta

#     - name: Xcode version 
#       run: /usr/bin/xcodebuild -version

#     # - name: print path
#     #   run: xcrun xcode-select --print-path

#     - name: select xcode 
#       run: sudo xcode-select --switch /Applications/Xcode_13.2.1.app/Contents/Developer

#     - name: Xcode version 
#       run: /usr/bin/xcodebuild -version

#     - name: To list all schemes in your workspace
#       run: xcodebuild -list -workspace AnyApp.xcworkspace
#       continue-on-error: true

#     - name: To list all targets, build configurations, and schemes used in your project,
#       run: xcodebuild -list -project AnyApp.xcodeproj/
#       continue-on-error: true

#     - name: building the app
#       run: xcodebuild -project AnyApp.xcodeproj -scheme AnyApp -allowProvisioningUpdates -archivePath ${{GITHUB.WORKSPACE}}/YourApp.xcarchive archive
#       continue-on-error: true

#     - name: listing
#       run: | 
#         ls -lta ${{GITHUB.WORKSPACE}}
#       continue-on-error: true

#     - name: listing
#       run: | 
#         ls -lta ${{GITHUB.WORKSPACE}}/YourApp.xcarchive
#       continue-on-error: true

#     # - name: building the app
#     #   run: xcodebuild -project AnyApp.xcodeproj -scheme livaat -configuration Debug -archivePath ${{GITHUB.WORKSPACE}}/YourApp.xcarchive archive -allowProvisioningUpdates
#     # - name: building the app
#     #   run: xcodebuild build-for-testing -workspace livaat.xcworkspace -scheme livaat -archivePath ${{GITHUB.WORKSPACE}}/YourApp.xcarchive archive -allowProvisioningUpdates CODE_SIGNING_ALLOWED=NO


#     - name: listing
#       run: | 
#         ls -lta ${{GITHUB.WORKSPACE}}/YourApp.xcarchive
#       continue-on-error: true

#     - name: listing
#       run: | 
#         ls -lta ${{GITHUB.WORKSPACE}}
#       continue-on-error: true
